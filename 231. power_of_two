class Solution {
    public boolean isPowerOfTwo(int n) {
        return n>0 &&(n&(n-1))==0;
        
    }
}




//A power of two has exactly one bit set in its binary representation.
Example:
2 → 0010

4 → 0100

8 → 1000
When you subtract 1 from a power of two:
All bits after the set bit become 1
The set bit becomes 0
So doing n & (n - 1) removes the only set bit
If the result is 0, it means only one bit was set, so n is a power of two.
If result is not 0, then n had more than one set bit → not a power of two.
//

